name: Production Deployment

on:
    release:
      types:
        - released
        - prereleased
    
jobs:
  build_and_deploy_staging:
    outputs:
      image: ${{ steps.export.outputs.image }}
      tag: ${{ steps.export.outputs.tag }}

    runs-on: ubuntu-latest
    env:
      image: cranecloud/frontend
      namespace: cranecloud-prod
      CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: develop

      - name: Install (Buildx)
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login (GCP)
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.CREDENTIALS_JSON }}

      - name: Install (Gcloud)
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: crane-cloud-274413
          install_components: "gke-gcloud-auth-plugin"

      - name: Get Kubernetes credentials
        run: |
          gcloud container clusters get-credentials staging-cluster --zone us-central1-a

      - id: meta
        name: Tag
        uses: docker/metadata-action@v3
        with:
          flavor: |
            latest=true
          images: ${{ env.image }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha

      - name: Add Env vars
        env:
          VITE_APP_API_BASE_URL: ${{ secrets.REACT_APP_API_BASE_URL_PROD }}
          VITE_APP_MIRA_API_URL: ${{ secrets.REACT_APP_MIRA_API_URL }}
          VITE_APP_FLUTTERWAVE_PUBLIC_KEY_TESTING: ${{ secrets.REACT_APP_FLUTTERWAVE_PUBLIC_KEY_TESTING }}
          VITE_APP_GITHUB_CLEINT_ID: ${{ secrets.REACT_APP_GITHUB_CLEINT_ID_PRODUCTION }}
          VITE_APP_EXCHANGE_RATE_KEY: ${{ secrets.REACT_APP_EXCHANGE_RATE_KEY }}
          VITE_APP_DOCS_URL: ${{ secrets.REACT_APP_DOCS_URL_PROD }}
          VITE_APP_DOCKER_EMAIL: ${{ secrets.REACT_APP_DOCKER_EMAIL }}
          VITE_APP_DOCKER_PASSWORD: ${{ secrets.REACT_APP_DOCKER_PASSWORD }}
          VITE_APP_MONITORING_APP: ${{ secrets.REACT_APP_MONITORING_APP_PROD }}
          VITE_APP_ACTIVITY_LOGS_API_URL: ${{ secrets.REACT_APP_ACTIVITY_LOGS_API_URL_PROD }}
          VITE_APP_MONITORING_API_URL: ${{ secrets.REACT_APP_MONITORING_API_URL_PROD }}
          VITE_APP_DATABASE_API_URL: ${{ secrets.REACT_APP_DATABASE_API_URL_PROD }}
          VITE_APP_MLOPS_API_URL: ${{ secrets.REACT_APP_MLOPS_API_URL_PROD }}
        run: |
          chmod +x ./.github/workflows/bin/create_envs.sh
          ./.github/workflows/bin/create_envs.sh

      
      - name: Build
        uses: docker/build-push-action@v5
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: .
          file: docker/prod/Dockerfile
          labels: ${{ steps.meta.outputs.labels }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          
      - id: export
        name: Export
        uses: actions/github-script@v7
        with:
          script: |
            const metadata = JSON.parse(`${{ steps.meta.outputs.json }}`)
            const fullUrl = metadata.tags.find((t) => t.includes(':sha-'))
            if (fullUrl == null) {
              core.error('Unable to find sha tag of image')
            } else {
              const tag = fullUrl.split(':')[1]
              core.setOutput('image', fullUrl)
              core.setOutput('tag', tag)
            }

      - name: Update deployment image
        run: |
          kubectl set image deployment/cranecloud-frontend cranecloud-frontend=${{ env.image }}:${{ steps.export.outputs.tag }} -n $namespace
